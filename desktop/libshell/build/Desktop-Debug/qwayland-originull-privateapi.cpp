// This file was generated by qtwaylandscanner
// source file is originull-privateapi.xml

#include "qwayland-originull-privateapi.h"

QT_BEGIN_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_GCC("-Wmissing-field-initializers")
QT_WARNING_DISABLE_CLANG("-Wmissing-field-initializers")

namespace QtWayland {

static inline void *wlRegistryBind(struct ::wl_registry *registry, uint32_t name, const struct ::wl_interface *interface, uint32_t version)
{
    const uint32_t bindOpCode = 0;
    return (void *) wl_proxy_marshal_constructor_versioned((struct wl_proxy *) registry,
    bindOpCode, interface, version, name, interface->name, version, nullptr);
}

    org_originull_privateapi::org_originull_privateapi(struct ::wl_registry *registry, uint32_t id, int version)
    {
        init(registry, id, version);
    }

    org_originull_privateapi::org_originull_privateapi(struct ::org_originull_privateapi *obj)
        : m_org_originull_privateapi(obj)
    {
    }

    org_originull_privateapi::org_originull_privateapi()
        : m_org_originull_privateapi(nullptr)
    {
    }

    org_originull_privateapi::~org_originull_privateapi()
    {
    }

    void org_originull_privateapi::init(struct ::wl_registry *registry, uint32_t id, int version)
    {
        m_org_originull_privateapi = static_cast<struct ::org_originull_privateapi *>(wlRegistryBind(registry, id, &org_originull_privateapi_interface, version));
    }

    void org_originull_privateapi::init(struct ::org_originull_privateapi *obj)
    {
        m_org_originull_privateapi = obj;
    }

    org_originull_privateapi *org_originull_privateapi::fromObject(struct ::org_originull_privateapi *object)
    {
        return static_cast<org_originull_privateapi *>(org_originull_privateapi_get_user_data(object));
    }

    bool org_originull_privateapi::isInitialized() const
    {
        return m_org_originull_privateapi != nullptr;
    }

    uint32_t org_originull_privateapi::version() const
    {
        return wl_proxy_get_version(reinterpret_cast<wl_proxy*>(m_org_originull_privateapi));
    }

    const struct wl_interface *org_originull_privateapi::interface()
    {
        return &::org_originull_privateapi_interface;
    }

    struct ::org_originull_menuserver *org_originull_privateapi::provision_menu_server()
    {
        return ::org_originull_privateapi_provision_menu_server(
            m_org_originull_privateapi);
    }

    void org_originull_privateapi::rotate_wallpaper()
    {
        ::org_originull_privateapi_rotate_wallpaper(
            m_org_originull_privateapi);
    }

    void org_originull_privateapi::register_desktop(struct ::wl_surface *surface)
    {
        ::org_originull_privateapi_register_desktop(
            m_org_originull_privateapi,
            surface);
    }

    org_originull_menuserver::org_originull_menuserver(struct ::wl_registry *registry, uint32_t id, int version)
    {
        init(registry, id, version);
    }

    org_originull_menuserver::org_originull_menuserver(struct ::org_originull_menuserver *obj)
        : m_org_originull_menuserver(obj)
    {
        init_listener();
    }

    org_originull_menuserver::org_originull_menuserver()
        : m_org_originull_menuserver(nullptr)
    {
    }

    org_originull_menuserver::~org_originull_menuserver()
    {
    }

    void org_originull_menuserver::init(struct ::wl_registry *registry, uint32_t id, int version)
    {
        m_org_originull_menuserver = static_cast<struct ::org_originull_menuserver *>(wlRegistryBind(registry, id, &org_originull_menuserver_interface, version));
        init_listener();
    }

    void org_originull_menuserver::init(struct ::org_originull_menuserver *obj)
    {
        m_org_originull_menuserver = obj;
        init_listener();
    }

    org_originull_menuserver *org_originull_menuserver::fromObject(struct ::org_originull_menuserver *object)
    {
        if (wl_proxy_get_listener((struct ::wl_proxy *)object) != (void *)&m_org_originull_menuserver_listener)
            return nullptr;
        return static_cast<org_originull_menuserver *>(org_originull_menuserver_get_user_data(object));
    }

    bool org_originull_menuserver::isInitialized() const
    {
        return m_org_originull_menuserver != nullptr;
    }

    uint32_t org_originull_menuserver::version() const
    {
        return wl_proxy_get_version(reinterpret_cast<wl_proxy*>(m_org_originull_menuserver));
    }

    const struct wl_interface *org_originull_menuserver::interface()
    {
        return &::org_originull_menuserver_interface;
    }

    void org_originull_menuserver::org_originull_menuserver_appmenu_top_level_window_changed(const QString &, const QString &)
    {
    }

    void org_originull_menuserver::handle_appmenu_top_level_window_changed(
        void *data,
        struct ::org_originull_menuserver *object,
        const char *service_name,
        const char *object_path)
    {
        Q_UNUSED(object);
        static_cast<org_originull_menuserver *>(data)->org_originull_menuserver_appmenu_top_level_window_changed(
            QString::fromUtf8(service_name),
            QString::fromUtf8(object_path));
    }

    const struct org_originull_menuserver_listener org_originull_menuserver::m_org_originull_menuserver_listener = {
        org_originull_menuserver::handle_appmenu_top_level_window_changed,
    };

    void org_originull_menuserver::init_listener()
    {
        org_originull_menuserver_add_listener(m_org_originull_menuserver, &m_org_originull_menuserver_listener, this);
    }
}

QT_WARNING_POP
QT_END_NAMESPACE
