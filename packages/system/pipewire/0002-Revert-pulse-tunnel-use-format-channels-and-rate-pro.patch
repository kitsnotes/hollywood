From 209610252800bf529c78d11b3fcdfd70b3ebad51 Mon Sep 17 00:00:00 2001
From: Bart Ribbers <bribbers@disroot.org>
Date: Wed, 3 Nov 2021 12:17:20 +0100
Subject: [PATCH] Revert "pulse-tunnel: use format, channels and rate props"

This reverts commit 28c2e8ca569c345637e7e1146b26c0246f9a645f.
---
 src/modules/meson.build                       |  3 +-
 .../modules/module-tunnel-sink.c              |  9 ----
 src/modules/module-pulse-tunnel.c             | 42 ++++++-------------
 3 files changed, 14 insertions(+), 40 deletions(-)

diff --git a/src/modules/meson.build b/src/modules/meson.build
index 2fbf0116d..591e660a8 100644
--- a/src/modules/meson.build
+++ b/src/modules/meson.build
@@ -284,8 +284,7 @@ pipewire_module_protocol_pulse = shared_library('pipewire-module-protocol-pulse'
 build_module_pulse_tunnel = pulseaudio_dep.found()
 if build_module_pulse_tunnel
   pipewire_module_pulse_tunnel = shared_library('pipewire-module-pulse-tunnel',
-  [ 'module-pulse-tunnel.c',
-    'module-protocol-pulse/format.c' ],
+  [ 'module-pulse-tunnel.c' ],
   include_directories : [configinc, spa_inc],
   install : true,
   install_dir : modules_install_dir,
diff --git a/src/modules/module-protocol-pulse/modules/module-tunnel-sink.c b/src/modules/module-protocol-pulse/modules/module-tunnel-sink.c
index 050255c39..4635520b7 100644
--- a/src/modules/module-protocol-pulse/modules/module-tunnel-sink.c
+++ b/src/modules/module-protocol-pulse/modules/module-tunnel-sink.c
@@ -204,15 +204,6 @@ struct module *create_module_tunnel_sink(struct impl *impl, const char *argument
 	}
 
 	audio_info_to_props(&info, stream_props);
-	if ((str = pw_properties_get(props, "format")) != NULL) {
-		uint32_t id = format_paname2id(str, strlen(str));
-		if (id == SPA_AUDIO_FORMAT_UNKNOWN) {
-			res = -EINVAL;
-			goto out;
-		}
-
-		pw_properties_set(stream_props, PW_KEY_AUDIO_FORMAT, format_id2name(id));
-	}
 
 	module = module_new(impl, &module_tunnel_sink_methods, sizeof(*d));
 	if (module == NULL) {
diff --git a/src/modules/module-pulse-tunnel.c b/src/modules/module-pulse-tunnel.c
index 8e3035aef..cc9a6ce83 100644
--- a/src/modules/module-pulse-tunnel.c
+++ b/src/modules/module-pulse-tunnel.c
@@ -50,7 +50,6 @@
 #include <pipewire/i18n.h>
 
 #include <pulse/pulseaudio.h>
-#include "module-protocol-pulse/format.h"
 
 /** \page page_module_pulse_tunnel PipeWire Module: Pulse Tunnel
  */
@@ -315,6 +314,11 @@ static int create_stream(struct impl *impl)
 				&playback_stream_events, impl);
 	}
 
+	impl->info = SPA_AUDIO_INFO_RAW_INIT(
+			.format = SPA_AUDIO_FORMAT_S16,
+			.rate = 48000,
+			.channels = 2,
+			.position = { SPA_AUDIO_CHANNEL_FL, SPA_AUDIO_CHANNEL_FR });
 	impl->frame_size = 2 * 2;
 
 	n_params = 0;
@@ -529,9 +533,9 @@ static int create_pulse_stream(struct impl *impl)
 		pa_threaded_mainloop_wait(impl->pa_mainloop);
 	}
 
-	ss.format = (pa_sample_format_t) format_id2pa(impl->info.format);
-	ss.channels = impl->info.channels;
-	ss.rate = impl->info.rate;
+	ss.format = PA_SAMPLE_S16NE;
+	ss.channels = 2;
+	ss.rate = 48000;
 
 	snprintf(stream_name, sizeof(stream_name), _("Tunnel for %s@%s"),
 			pw_get_user_name(), pw_get_host_name());
@@ -700,35 +704,16 @@ static void parse_position(struct spa_audio_info_raw *info, const char *val, siz
 	}
 }
 
-static inline uint32_t format_from_name(const char *name, size_t len)
-{
-	int i;
-	for (i = 0; spa_type_audio_format[i].name; i++) {
-		if (strncmp(name, spa_debug_type_short_name(spa_type_audio_format[i].name), len) == 0)
-			return spa_type_audio_format[i].type;
-	}
-	return SPA_AUDIO_FORMAT_UNKNOWN;
-}
-
 static void parse_audio_info(struct pw_properties *props, struct spa_audio_info_raw *info)
 {
 	const char *str;
 
 	*info = SPA_AUDIO_INFO_RAW_INIT(
-			.rate = 48000,
-			.channels = 2,
-			.format = SPA_AUDIO_FORMAT_S16);
-
-	if ((str = pw_properties_get(props, PW_KEY_AUDIO_FORMAT)) != NULL) {
-		uint32_t id;
-
-		id = format_from_name(str, strlen(str));
-		if (id != SPA_AUDIO_FORMAT_UNKNOWN)
-			info->format = id;
-	}
-
-	info->rate = pw_properties_get_uint32(props, PW_KEY_AUDIO_RATE, info->rate);
-	info->channels = pw_properties_get_uint32(props, PW_KEY_AUDIO_CHANNELS, info->channels);
+			.format = SPA_AUDIO_FORMAT_F32P);
+	if ((str = pw_properties_get(props, PW_KEY_AUDIO_RATE)) != NULL)
+		info->rate = atoi(str);
+	if ((str = pw_properties_get(props, PW_KEY_AUDIO_CHANNELS)) != NULL)
+		info->channels = atoi(str);
 	if ((str = pw_properties_get(props, SPA_KEY_AUDIO_POSITION)) != NULL)
 		parse_position(info, str, strlen(str));
 }
@@ -818,7 +803,6 @@ int pipewire__module_init(struct pw_impl_module *module, const char *args)
 	if ((str = pw_properties_get(props, "stream.props")) != NULL)
 		pw_properties_update_string(impl->stream_props, str, strlen(str));
 
-	copy_props(impl, props, PW_KEY_AUDIO_FORMAT);
 	copy_props(impl, props, PW_KEY_AUDIO_RATE);
 	copy_props(impl, props, PW_KEY_AUDIO_CHANNELS);
 	copy_props(impl, props, SPA_KEY_AUDIO_POSITION);
-- 
2.33.1

