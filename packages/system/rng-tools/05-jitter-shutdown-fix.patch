Change already including in Upstream master:

When we shutdown jitter we want to first lock the threads mutex, then
signal it to exit, otherwise we can get a race condition in which the
thread exits before we wait on the condition variable, and wind up
blocking forever

Signed-off-by: Neil Horman <nhorman@tuxdriver.com>

---

diff -aur a/rngd_jitter.c b/rngd_jitter.c
--- a/rngd_jitter.c
+++ b/rngd_jitter.c
@@ -556,10 +556,10 @@
 
 	/* And wait for completion of each thread */
 	for (i=0; i < num_threads; i++) {
-		/* Signal the threads to exit */
-		pthread_kill(threads[i], SIGUSR1);
 		/* and wait for them to shutdown */
 		pthread_mutex_lock(&tdata[i].statemtx);
+		pthread_kill(threads[i], SIGUSR1);
+		/* Signal the threads to exit */
 		if (!tdata[i].done) {
 			message_entsrc(ent_src,LOG_DAEMON|LOG_DEBUG, "Checking on done for thread %d\n", i);
 			pthread_cond_wait(&tdata[i].statecond, &tdata[i].statemtx);
